<UserControl x:Class="MusicBox.Modules.SheetEditor.Views.BarEditor"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:conv="clr-namespace:MusicBox.Modules.SheetEditor.Converters"
             xmlns:local="clr-namespace:MusicBox.Modules.SheetEditor.Views"
             mc:Ignorable="d"
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <conv:TimePixelBackgroundConverter x:Key="TimePixelBackConv" />
        <conv:IsExpandedTotNextPixelConverter x:Key="IsExpandedConv" />
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" SnapsToDevicePixels="true" StrokeThickness="1" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD" />
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070" />
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="Transparent" />
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1" />
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6" />
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B" />
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4" />
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5" />
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383" />
        <Style x:Key="TimePixelButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}" />
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}" />
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Padding" Value="1" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <!-- <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}" /> -->
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}" />
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}" />
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}" />
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>
    <Grid>
        
        <Border BorderThickness="2" BorderBrush="Azure">
            <ListBox x:Name="TimePixels" ItemsSource="{Binding TimePixels}">
                <ListBox.ItemsPanel>
                    <ItemsPanelTemplate>
                        <UniformGrid Columns="{Binding TimePixelPerLine}" Margin="2" />
                    </ItemsPanelTemplate>
                </ListBox.ItemsPanel>
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <StackPanel Orientation="Horizontal">
                            <Button Command="{Binding RelativeSource={RelativeSource AncestorType=local:BarEditor}, Path=DataContext.ActivatePixelCommand}"
                                        CommandParameter="{Binding}"
                                        Background="{Binding Status,Converter={StaticResource TimePixelBackConv}}"
                                        BorderThickness="0"
                                        Height="12" Width="24"
                                        Margin="-4"
                                        Style="{DynamicResource TimePixelButtonStyle}"
                                        ToolTip="{Binding NoteTooltip}">
                                <Button.InputBindings>
                                    <MouseBinding Gesture="Shift+LeftClick"
                                         Command="{Binding RelativeSource={RelativeSource AncestorType=local:BarEditor}, Path=DataContext.ExpandPixelCommand}"
                                         CommandParameter="{Binding}" />
                                    <MouseBinding Gesture="Shift+LeftDoubleClick"
                                         Command="{Binding RelativeSource={RelativeSource AncestorType=local:BarEditor}, Path=DataContext.ExpandPixelCommand}"
                                         CommandParameter="{Binding}" />
                                    <MouseBinding Gesture="WheelClick"
                                         Command="{Binding RelativeSource={RelativeSource AncestorType=local:BarEditor}, Path=DataContext.AlterPixelCommand}"
                                         CommandParameter="{Binding}" />
                                    <MouseBinding Gesture="Shift+WheelClick"
                                         Command="{Binding RelativeSource={RelativeSource AncestorType=local:BarEditor}, Path=DataContext.AlterPixelCommand}"
                                         CommandParameter="{Binding}" />
                                </Button.InputBindings>
                            </Button>
                            <Rectangle Height="5" Width="3" Fill="{Binding Path=IsExpandedToNextPixel, Converter={StaticResource IsExpandedConv}}" Margin="4,0,-6,0" />
                        </StackPanel>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>
        </Border>

    </Grid>
</UserControl>